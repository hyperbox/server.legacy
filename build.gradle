/*
 * Hyperbox - Virtual Infrastructure Manager
 * Copyright (C) 2021 Max Dor
 *
 * https://apps.kamax.io/hyperbox
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import java.util.regex.Pattern

String buildVersion() {
    def versionPattern = Pattern.compile("v(\\d+\\.)?(\\d+\\.)?(\\d+)(-.*)?")

    String version = System.getenv('HBOX_SERVER_BUILD_VERSION')
    if (version == null || version.length() == 0) {
        version = sourceVersion()
    }
    version = versionPattern.matcher(version).matches() ? version.substring(1) : version
    return version
}

String sourceVersion() {
    String version = System.getenv('HBOX_SERVER_SOURCE_VERSION')
    if (version != null && version.length() > 0) {
        return version
    }

    ByteArrayOutputStream out = new ByteArrayOutputStream()

    def o = exec {
        commandLine = ['git', 'describe', '--tags', '--always', '--dirty']
        standardOutput = out
        errorOutput = out
        ignoreExitValue = true
    }

    if (o.exitValue != 0) {
        if (o.exitValue != 128) {
            logger.lifecycle("Unable to determine git version: {}", out)
        }

        return "UNKNOWN"
    }

    return out.toString().replace(System.lineSeparator(), '')
}

apply plugin: "application"

group = "io.kamax.apps.hbox"
version = buildVersion()
mainClassName = "io.kamax.hboxd.HyperboxInteractive"
sourceCompatibility = 1.8
targetCompatibility = 1.8

String versionInfoFile = "${projectDir}/build/tmp/versionInfo/server.build.properties"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "io.kamax.apps.hbox:hbox-api:0.2.2-4-g71187c2"
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation "com.h2database:h2:1.3.174"

    // Required for Web Services connectivity in the VirtualBox Java Client
    // No longer builtin in JRE 11
    implementation "javax.xml.ws:jaxws-api:2.3.1"
    implementation "com.sun.xml.ws:jaxws-rt:2.3.3"
    implementation 'dom4j:dom4j:1.6.1'

    implementation files("lib/vbox/vboxjws-6.0.jar")
    implementation files("lib/vbox/vboxjws-6.1.jar")

    testImplementation "junit:junit:4.13.2"
}

tasks.register("versionInfo") {
    doLast {
        File versionFile = new File(versionInfoFile)
        versionFile.getParentFile().mkdir()
        versionFile.text = 'version=' + project.version
    }
}

jar {
    dependsOn versionInfo
    from versionInfoFile
}

tasks.register("cleanDist", Delete) {
    delete "build/dist"
}

tasks.register("buildDebian", Exec) {
    dependsOn assemble

    commandLine(
            'scripts/debian/createPackage'
    )
}

tasks.register("buildDist") {
    dependsOn builddebian
}
